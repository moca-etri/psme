#!/usr/bin/env bash

#
# Copyright (c) 2018-2019 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

SCRIPT_NAME=`basename $0`
KUBE_CONFIG=~/.kube/config

function print_usage() {
    echo "Usage: $SCRIPT_NAME [-h] [-c KUBECONFIG_FILE] [-o OUTPUT_FILE]"
    echo
    echo "Script gathers logs from all pods and puts them in tar.gz archive"
    echo "in current directory."
    echo
    echo "Options:"
    echo "  -c KUBECONFIG_FILE, default: ~/.kube/config"
    echo "  -o OUTPUT_FILE"
    echo "  -h this message"

    exit 1
}

function call_kubectl() {
    kubectl --kubeconfig=${KUBE_CONFIG} "$@"
}

TMP_DIR=`mktemp -dt ${SCRIPT_NAME}.XXXXXXXXXXX`
CURRENT_TIME=`date +%Y-%m-%d-%H-%M-%S-%N | cut -c -23`
OUTPUT_DIR_NAME=pod_manager_health_check_${CURRENT_TIME}
OUTPUT_DIR=${TMP_DIR}/${OUTPUT_DIR_NAME}
OUTPUT_FILE=${OUTPUT_DIR_NAME}.tar.gz

while getopts c:o:h OPTION; do
    case ${OPTION} in
        c) KUBE_CONFIG=$OPTARG ;;
        o) OUTPUT_FILE=$OPTARG ;;
        h) print_usage ;;
        *) print_usage ;;
    esac
done

mkdir -p ${OUTPUT_DIR}

POD_NAMES=`call_kubectl get pods --no-headers --output=custom-columns=NAME:.metadata.name`
for POD_NAME in ${POD_NAMES}; do
    echo ${POD_NAME};
    call_kubectl exec ${POD_NAME} -- sh -c 'pkill -3 java || :'
    call_kubectl exec ${POD_NAME} -- top -n 1 -b > ${OUTPUT_DIR}/${POD_NAME}-top.txt
    call_kubectl logs ${POD_NAME} > ${OUTPUT_DIR}/${POD_NAME}.log
    call_kubectl logs --previous ${POD_NAME} > /dev/null 2>&1
    if [[ $? == 0 ]]; then
        call_kubectl logs --previous ${POD_NAME} > ${OUTPUT_DIR}/${POD_NAME}_previous.log
    fi
    call_kubectl describe pod ${POD_NAME} > ${OUTPUT_DIR}/${POD_NAME}_describe.log
done

call_kubectl top pod --containers > ${OUTPUT_DIR}/top_pod.txt
call_kubectl top node > ${OUTPUT_DIR}/top_node.txt

COMPONENTS="nodecomposer detector tagger accessverifier"
POSTGRES_POD_NAMES=$(call_kubectl get pods --no-headers --selector "app=postgresql" --output=custom-columns=NAME:.metadata.name)
POSTGRES_PASSWORD=$(call_kubectl get secret --namespace default podm-db-postgresql -o jsonpath="{.data.postgresql-password}" | base64 --decode)
for POD_NAME in ${POSTGRES_POD_NAMES}; do
    for COMPONENT in ${COMPONENTS}; do
        call_kubectl exec ${POD_NAME} -- bash -c "PGPASSWORD=${POSTGRES_PASSWORD} pg_dump --username=postgres --host=localhost --format=plain --no-password ${COMPONENT}" > ${OUTPUT_DIR}/${POD_NAME}_${COMPONENT}_db_dump.sql
    done
done

tar zcf ${OUTPUT_FILE} -C ${TMP_DIR} ${OUTPUT_DIR_NAME}

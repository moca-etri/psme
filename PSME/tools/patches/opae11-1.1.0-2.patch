diff -Naur --ignore-trailing-space ./opae11-1.1.0-2/libopae/CMakeLists.txt ../opae11-1.1.0-2/libopae/CMakeLists.txt
--- ./opae11-1.1.0-2/libopae/CMakeLists.txt	2018-07-17 02:55:35.000000000 +0200
+++ ../opae11-1.1.0-2/libopae/CMakeLists.txt	2019-04-11 08:04:20.272088871 +0200
@@ -24,7 +24,7 @@
 ## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,  EVEN IF ADVISED OF THE
 ## POSSIBILITY OF SUCH DAMAGE.
 
-project(libopae-c)
+project(libopae11-c)
 
 ############################################################################
 ## Add 'coverage' ##########################################################
@@ -35,7 +35,7 @@
 endif(CMAKE_BUILD_TYPE STREQUAL "Coverage")
 
 ############################################################################
-## Add 'libopae-c' library ###################################################
+## Add 'libopae11-c' library ###################################################
 ############################################################################
 set(SRC
   src/common.c
@@ -61,9 +61,9 @@
   src/usrclk/user_clk_pgm_uclock.c)
 
 # Define target
-add_library(opae-c SHARED ${SRC})
-add_dependencies(opae-c copy-common-opae-header-files)
-target_link_libraries(opae-c
+add_library(opae11-c SHARED ${SRC})
+add_dependencies(opae11-c copy-common-opae-header-files)
+target_link_libraries(opae11-c
   m
   safestr
   ${libjson-c_LIBRARIES}
@@ -75,7 +75,7 @@
 # Define headers for this library. PUBLIC headers are used for
 # compiling the library, and will be added to consumers' build
 # paths. Keep current directory private.
-target_include_directories(opae-c PUBLIC
+target_include_directories(opae11-c PUBLIC
   $<BUILD_INTERFACE:${OPAE_INCLUDE_DIR}>
   $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/include>
   $<INSTALL_INTERFACE:include>
@@ -87,14 +87,14 @@
 endif(CMAKE_BUILD_TYPE STREQUAL "Coverage")
 
 # Target properties
-set_property(TARGET opae-c PROPERTY C_STANDARD 99)
-set_target_properties(opae-c PROPERTIES
+set_property(TARGET opae11-c PROPERTY C_STANDARD 99)
+set_target_properties(opae11-c PROPERTIES
   VERSION ${INTEL_FPGA_API_VERSION}
   SOVERSION ${INTEL_FPGA_API_VER_MAJOR})
 
 # Add coverage flags
 if(CMAKE_BUILD_TYPE STREQUAL "Coverage")
-  target_link_libraries(opae-c ${GCOV_LINK_FLAGS})
+  target_link_libraries(opae11-c ${GCOV_LINK_FLAGS})
 endif(CMAKE_BUILD_TYPE STREQUAL "Coverage")
 
 # Set debug flags, if required
@@ -105,20 +105,20 @@
 # Hide non-public symbols when building release
 if(CMAKE_BUILD_TYPE STREQUAL "Release")
   message("!! Building for release, may break internal tests")
-  set_property(TARGET opae-c PROPERTY C_VISIBILITY_PRESET hidden)
+  set_property(TARGET opae11-c PROPERTY C_VISIBILITY_PRESET hidden)
 endif(CMAKE_BUILD_TYPE STREQUAL "Release")
 
-install(TARGETS opae-c
+install(TARGETS opae11-c
   LIBRARY DESTINATION ${OPAE_LIB_INSTALL_DIR}
   COMPONENT opaeclib)
 
 #get_property(LIB64 GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS) 
 #if ("${LIB64}" STREQUAL "TRUE")
-#    install(TARGETS opae-c
+#    install(TARGETS opae11-c
 #      LIBRARY DESTINATION lib64
 #      COMPONENT opaeclib)
 #else()
-#    install(TARGETS opae-c
+#    install(TARGETS opae11-c
 #      LIBRARY DESTINATION lib
 #      COMPONENT opaeclib)
 #endif() 
@@ -130,8 +130,8 @@
 
 if(CMAKE_BUILD_TYPE STREQUAL "Coverage")
   if(BUILD_TESTS AND GTEST_FOUND)
-    set_target_for_coverage(opae-c bin/gtapi -p)
-    add_dependencies(coverage_opae-c gtapi)
+    set_target_for_coverage(opae11-c bin/gtapi -p)
+    add_dependencies(coverage_opae11-c gtapi)
   endif(BUILD_TESTS AND GTEST_FOUND)
 endif(CMAKE_BUILD_TYPE STREQUAL "Coverage")
 
diff -Naur --ignore-trailing-space ./opae11-1.1.0-2/libopaecxx/CMakeLists.txt ../opae11-1.1.0-2/libopaecxx/CMakeLists.txt
--- ./opae11-1.1.0-2/libopaecxx/CMakeLists.txt	2018-07-17 02:55:35.000000000 +0200
+++ ../opae11-1.1.0-2/libopaecxx/CMakeLists.txt	2019-04-11 08:04:35.896088838 +0200
@@ -24,18 +24,18 @@
 ## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,  EVEN IF ADVISED OF THE
 ## POSSIBILITY OF SUCH DAMAGE.
 
-project(libopae-cxx)
+project(libopae11-cxx)
 
 
 #############################################################################
-### Add 'libopae-cxx' library ###################################################
+### Add 'libopae11-cxx' library ###################################################
 #############################################################################
 #set(SRC)
 
 ## Define target
-#add_library(opae-c SHARED ${SRC})
-#add_dependencies(opae-c copy-common-opae-header-files)
-#target_link_libraries(opae-c
+#add_library(opae11-c SHARED ${SRC})
+#add_dependencies(opae11-c copy-common-opae-header-files)
+#target_link_libraries(opae11-c
 #  m
 #  safestr
 #  ${libjson-c_LIBRARIES}
@@ -56,17 +56,17 @@
 		    src/errors.cpp
                     src/version.cpp)
 
-add_library(opae-cxx-core SHARED ${OPAECXXCORE_SRC})
-target_link_libraries(opae-cxx-core opae-c)
+add_library(opae11-cxx-core SHARED ${OPAECXXCORE_SRC})
+target_link_libraries(opae11-cxx-core opae11-c)
 
 add_executable(hello_cxxcore samples/hello_fpga-1.cpp)
-target_link_libraries(hello_cxxcore opae-c ${CMAKE_THREAD_LIBS_INIT} opae-cxx-core )
+target_link_libraries(hello_cxxcore opae11-c ${CMAKE_THREAD_LIBS_INIT} opae11-cxx-core )
 
 
 # Define headers for this library. PUBLIC headers are used for
 # compiling the library, and will be added to consumers' build
 # paths. Keep current directory private.
-target_include_directories(opae-cxx-core PUBLIC
+target_include_directories(opae11-cxx-core PUBLIC
   $<BUILD_INTERFACE:${OPAE_INCLUDE_DIR}>
   $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/include>
   $<INSTALL_INTERFACE:include>
@@ -79,7 +79,7 @@
 configure_file ("${CMAKE_SOURCE_DIR}/cmake/config/config.h.in"
                 "${PROJECT_BINARY_DIR}/include/config_int.h" )
 
-set_install_rpath(opae-cxx-core)
-install(TARGETS opae-cxx-core
+set_install_rpath(opae11-cxx-core)
+install(TARGETS opae11-cxx-core
   LIBRARY DESTINATION ${OPAE_LIB_INSTALL_DIR}
   COMPONENT opaecxxcorelib)
